<%= form_with(model: create_content_dto, exclude: [:creation_time, :author]) do |form| %>
  <% if create_content_dto.errors.any? %>
    <div style="color: red">
      <h2><%= pluralize(create_content_dto.errors.count, "error") %> prohibited this create_content_dto from being saved:</h2>

      <ul>
        <% create_content_dto.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div>
    <%= form.label 'Type' %>
    <%= select_tag :content_type, options_for_select(["Nyhed", "Event"]) %>
  </div>

  <div>
    <%= form.label 'Sider' %>
    <% @sites_options.each do |option| %>
      <div>
        <%= check_box_tag 'sites[]', option %>
        <%= label_tag option, nil, class: 'choice-label' %>
      </div>
    <% end %>
  </div>

  <div>
    <%= form.label "Dato" %>
    <div class="side-by-side">
      <%= date_field("dates", "start") %>
      -
      <%= date_field("dates", "end") %>
    </div>

  </div>

  <div>
    <%= form.label 'Titel' %>
    <%= form.text_field :title %>
  </div>

  <div>
    <%= form.label 'Tekst' %>
    <%= form.text_area :body %>
  </div>

  <div>
    <%= form.label 'Billede' %>
    <%= form.file_field :image, accept: 'image/png,image/jpeg' %>
  </div>

  <div class="side-by-side">
    <%= link_to "Fortryd", :back, class: 'btn-shape btn-cancel' %>
    <%= form.submit 'Vis', name: 'submit_btn', class: 'preview-submit btn-shape btn-preview' %>
    <%= form.submit 'Gem', name: 'submit_btn', class: 'save-submit btn-shape btn-save' %>
  </div>
<% end %>

<script>
  // These does let me open the submitted data in new window or save it.
  const newTabSubmitBtn = document.querySelector('.preview-submit');
  const saveSubmitBtn = document.querySelector('.save-submit');
  const form = document.querySelector('form');
  newTabSubmitBtn.addEventListener('click', (event) => {
      form.target = '_blank';
  });
  saveSubmitBtn.addEventListener('click', (event) => {
      form.target = '_self';
  });

  // These does let textareas size by content (why isn't that an attribute tho)
  const tx = document.getElementsByTagName("textarea");
  for (let i = 0; i < tx.length; i++) {
      tx[i].setAttribute("style", "height:" + (tx[i].scrollHeight) + "px;overflow-y:hidden;");
      tx[i].addEventListener("input", OnInput, false);
  }
  function OnInput() {
      this.style.height = 0;
      this.style.height = (this.scrollHeight) + "px";
  }
</script>